version: '3.8'
services:
  db:
    build: 
      context: ./db
      dockerfile: Dockerfile
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth=scram-sha-256"
    command: >
      postgres 
      -c listen_addresses="*"
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      -c log_replication_commands=on
      -c logging_collector=on
      -c log_directory='/var/log/postgresql'
      -c log_destination='stderr'
      -c log_filename=postgres.log
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  db_repl:
    build: 
      context: ./db_repl
      dockerfile: Dockerfile
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    env_file:
      - .env
    user: postgres
    command: |
      bash -c "
      export PGPASSWORD=ubuntu
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db --port=5432
      do
        echo 'Waiting for primary to connect...'
        sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
      postgres 
      -c listen_addresses="*"
    depends_on:
      - db

  bot:
    build: 
      context: ./bot
      dockerfile: Dockerfile
    ports:
      - 5001:5000
    depends_on:
      - db